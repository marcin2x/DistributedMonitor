{"version":3,"sources":["boot.js","base/base.js","base/configs/main.js","base/configs/Restangular.js","base/controllers/baseCtrl.js","base/services/errorHandler.js"],"names":["angular","element","document","ready","bootstrap","base","module","config","$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider","html5Mode","enabled","state","templateUrl","controller","url","otherwise","interceptors","push","run","$rootScope","loaded","$on","loader","getElementById","setTimeout","body","removeChild","ApiBaseUrl","RestangularProvider","setBaseUrl","setDefaultHeaders","console","log","factory","$q","$injector","handle","rejection","status","get","go","responseError","reject"],"mappings":";;AAAAA,QAAQC,OAAR,CAAgBC,QAAhB,EAA0BC,KAA1B,CAAgC,YAAA;AAC5BH,YAAQI,SAAR,CAAkBF,QAAlB,EAA4B,CAAC,MAAD,CAA5B;AACH,CAFD;;;ACAA,IAAMG,OAAOL,QAAQM,MAAR,CAAe,MAAf,EAAuB,CAChC,WADgC,EAEhC,WAFgC,EAGhC,YAHgC,EAIhC,aAJgC,CAAvB,CAAb;;;ACAAD,KAAKE,MAAL,CAAY,UAAAC,cAAA,EAAAC,kBAAA,EAAAC,iBAAA,EAAAC,aAAA,EAAA;AACRD,sBAAkBE,SAAlB,CAA4B;AACxBC,iBAAS;AADe,KAA5B;AAGAL,mBACKM,KADL,CACW,MADX,EACmB;AACXC,qBAAa,sCADF;AAEXC,oBAAY;AAFD,KADnB,EAKKF,KALL,CAKW,gBALX,EAK6B;AACrBG,aAAK,YADgB;AAErBF,qBAAa;AAFQ,KAL7B,EASKD,KATL,CASW,YATX,EASyB;AACjBG,aAAK,QADY;AAEjBF,qBAAa;AAFI,KATzB;AAaAN,uBAAmBS,SAAnB,CAA6B,YAA7B;AACAP,kBAAcQ,YAAd,CAA2BC,IAA3B,CAAgC,cAAhC;AACH,CAnBD,EAmBGC,GAnBH,CAmBQ,sBAAA;AACJC,eAAWC,MAAX,GAAoB,KAApB;AACAD,eAAWE,GAAX,CAAe,qBAAf,EAAsC,YAAY;AAC9C,YAAI,CAACF,WAAWC,MAAhB,EAAwB;AAAA;AACpBD,2BAAWC,MAAX,GAAoB,IAApB;AACA,oBAAME,SAASvB,SAASwB,cAAT,CAAwB,WAAxB,CAAf;AACAC,2BAAW,YAAI;AACXzB,6BAAS0B,IAAT,CAAcC,WAAd,CAA0BJ,MAA1B;AACH,iBAFD,EAEE,GAFF;AAHoB;AAMvB;AACJ,KARD;AASH,CA9BD;;;ACAApB,KAAKE,MAAL,CAAa,+BAAA;AACT,QAAMuB,aAAa,MAAnB;AACAC,wBACKC,UADL,CACgBF,UADhB,EAEKG,iBAFL,CAEuB,EAAC,gBAAgB,kBAAjB,EAFvB;AAGH,CALD;;;ACAA5B,KAAKW,UAAL,CAAgB,UAAhB,EAA4B,YAAA;AACxBkB,YAAQC,GAAR,CAAY,gBAAZ;AACH,CAFD;;;ACAA9B,KAAK+B,OAAL,CAAa,cAAb,EAA6B,UAAAC,EAAA,EAAAC,SAAA,EAAA;AACzB,aAASC,MAAT,CAAgBC,SAAhB,EAA2B;AACvB,YAAIA,UAAUC,MAAV,KAAqB,GAAzB,EAA8B;AAC1BH,sBAAUI,GAAV,CAAc,QAAd,EAAwBC,EAAxB,CAA2B,EAA3B;AACH;AACJ;AACD,WAAO;AACHC,uBAAe,uBAAUJ,SAAV,EAAqB;AAChCD,mBAAOC,SAAP;AACA,mBAAOH,GAAGQ,MAAH,CAAUL,SAAV,CAAP;AACH;AAJE,KAAP;AAQH,CAdD","file":"app.js","sourcesContent":["angular.element(document).ready(() => {\r\n    angular.bootstrap(document, ['base']);\r\n});","const base = angular.module('base', [\r\n    'ui.router',\r\n    'ngAnimate',\r\n    'ngSanitize',\r\n    'restangular'\r\n]);","base.config(($stateProvider, $urlRouterProvider, $locationProvider, $httpProvider) => {\r\n    $locationProvider.html5Mode({\r\n        enabled: true\r\n    });\r\n    $stateProvider\r\n        .state('base', {\r\n            templateUrl: 'scripts/modules/base/views/base.html',\r\n            controller: 'baseCtrl'\r\n        })\r\n        .state('base.dashboard', {\r\n            url: '/dashboard',\r\n            templateUrl: 'scripts/modules/base/views/dashboard.html'\r\n        })\r\n        .state('base.error', {\r\n            url: '/error',\r\n            templateUrl: 'scripts/modules/base/views/error.html'\r\n        });\r\n    $urlRouterProvider.otherwise('/dashboard');\r\n    $httpProvider.interceptors.push('errorHandler');\r\n}).run( $rootScope => {\r\n    $rootScope.loaded = false;\r\n    $rootScope.$on('$stateChangeSuccess', function () {\r\n        if (!$rootScope.loaded) {\r\n            $rootScope.loaded = true;\r\n            const loader = document.getElementById('appLoader');\r\n            setTimeout(()=>{\r\n                document.body.removeChild(loader);\r\n            },500)\r\n        }\r\n    });\r\n});\r\n","base.config( RestangularProvider => {\r\n    const ApiBaseUrl = '/api';\r\n    RestangularProvider\r\n        .setBaseUrl(ApiBaseUrl)\r\n        .setDefaultHeaders({\"Content-Type\": \"application/json\"})\r\n});","base.controller('baseCtrl', () => {\r\n    console.log('baseController');\r\n});","base.factory('errorHandler', ($q, $injector) => {\r\n    function handle(rejection) {\r\n        if (rejection.status === 403) {\r\n            $injector.get('$state').go('');\r\n        }\r\n    }\r\n    return {\r\n        responseError: function (rejection) {\r\n            handle(rejection);\r\n            return $q.reject(rejection);\r\n        }\r\n    };\r\n\r\n\r\n});"]}